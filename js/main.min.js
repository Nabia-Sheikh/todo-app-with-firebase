const dbRef = firebase.database().ref();
const usersRef = dbRef.child("list");

var userData = [];

var myObj = [];
var input = document.getElementById("input"),
  button = document.getElementById("button"),
  todo = document.getElementById("todo"),
  completed = document.getElementById("completed"),
  completedDelete = document.getElementById("deleteCompleted"),
  nonComplete = document.getElementById("deleteNonComplete");

input.addEventListener("keyup", function (e) {
  13 === e.keyCode && button.click();
}),
  usersRef.once("value", (snap) => {
    snap.forEach((element) => {
      // location.reload();
      var key = element.key;
      nonComplete.style.display = "block";
      var e = document.createElement("span"),
        t = document.createTextNode(element.val().trim()),
        d = document.createElement("li"),
        n = document.createElement("div"),
        a = document.createElement("button"),
        o = document.createElement("i"),
        i = document.createElement("button"),
        c = document.createElement("i"),
        l = document.createElement("button"),
        p = document.createElement("i");
      d.classList.add("todo-item"),
        n.classList.add("todo-buttons"),
        a.classList.add("button", "button--edit"),
        a.setAttribute("data-key", key),
        o.classList.add("fa", "fa-pencil"),
        i.classList.add("button", "button--delete"),
        i.setAttribute("data-key", key),
        c.classList.add("fa", "fa-trash"),
        l.classList.add("button", "button--done"),
        p.classList.add("fa", "fa-check"),
        a.appendChild(o),
        i.appendChild(c),
        l.appendChild(p),
        n.appendChild(a),
        n.appendChild(i),
        n.appendChild(l),
        e.appendChild(t),
        d.appendChild(e),
        d.appendChild(n),
        todo.prepend(d), // Adding to li
        a.addEventListener("click", function () {
          function t() {
            // console.log(i.value);

            i.value.trim() &&
              ((e.textContent = i.value.trim()),
              e.removeAttribute("style"),
              d.removeChild(o),
              n.prepend(a),
              (d.style.paddingRight = "135px"));
            var editRef = dbRef.child("list/" + key);
            // var againKey = element.key;
            // var goObj = {};
            editRef.set(i.value);
            location.reload();
          }
          var d = this.parentNode.parentNode,
            o = document.createElement("div"),
            i = document.createElement("input"),
            c = document.createElement("button"),
            l = document.createElement("i");
          o.classList.add("todo-editWrapper"),
            c.classList.add("button", "button--update"),
            l.classList.add("fa", "fa-plus"),
            (i.type = "text"),
            i.classList.add("todo-edit"),
            (i.value = d.childNodes[0].textContent),
            c.appendChild(l),
            o.appendChild(i),
            o.appendChild(c),
            (e.style.display = "none"),
            d.prepend(o),
            i.focus(),
            n.removeChild(a),
            (d.style.paddingRight = "95px"),
            c.addEventListener("click", t),
            i.addEventListener("keyup", function (e) {
              13 === e.keyCode && t();
            });
        }),
        // Deleteting
        i.addEventListener("click", function (e) {
          e.stopPropagation();
          var e = this.parentNode.parentNode;
          var userID = this.getAttribute("data-key");
          console.log(userID);
          const userRef = dbRef.child("list/" + userID);
          userRef.remove();
          e.parentNode.removeChild(e);
          location.reload();
        }),
        nonComplete.addEventListener("click", function () {
          document.getElementById("todo").innerHTML = "";
          document.getElementById("completed").innerHTML = "";
          nonComplete.style.display = "none";
          usersRef.set(null);
        });
      completedDelete.addEventListener("click", function () {
        document.getElementById("completed").innerHTML = "";
        var userID = this.getAttribute("data-key");
        const userRef = dbRef.child("list/" + userID);
        userRef.remove();
        completedDelete.style.display = "none";
      });

      l.addEventListener("click", function () {
        completedDelete.style.display = "none";
        "todo" === this.parentNode.parentNode.parentNode.id
          ? completed.prepend(d)
          : todo.appendChild(d);
      });
    });

    userData.push(snap.val());
    // var a = snap.val();
    // console.log(a);
    // console.log(snap.val());
  });
setTimeout(() => {
  console.log(userData);
}, 5000);

// Hard coded
button.addEventListener("click", function () {
  if (input.value.trim()) {
    nonComplete.style.display = "block";

      usersRef.push(input.value, () => {
        console.log("Data Added.");
      });
   
    (input.value = ""), location.reload();
    }
});
